@startuml

title __CLIENT's Class Diagram__\n

  namespace client {
    class client.Client {
        - classificaList : List<String>
        - friendsList : List<String>
        - logged : boolean
        - pendingFriendsList : List<String>
        - richiesteSfida : ConcurrentHashMap<String, String>
        - sfida : List<String>
        - tcpTH : Thread
        - udpTH : Thread
        + Client()
        {static} + main()
    }
  }
  

  namespace client {
    class client.ClientLoggedGUI {
        - AddFriendP : JPanel
        - Classifica : JScrollPane
        - ClassificaList : JList<String>
        - Friend : JPanel
        - LoggedPanel : JPanel
        - Main : JPanel
        - Menu : JPanel
        - Name : JLabel
        - Sfide : JPanel
        - SfideScroll : JScrollPane
        - addBT : JButton
        - addFriendTB : JTextField
        - challengeLB : JLabel
        - friends : JPanel
        - friendsLB : JLabel
        - friendsScroll : JScrollPane
        - leaderboardLB : JLabel
        - logoutBT : JButton
        - pending : JPanel
        - pendingLB : JLabel
        - pendingRequest : JScrollPane
        - window : JFrame
        + ClientLoggedGUI()
        + addFriendTile()
        + addPendingFriendTile()
        + addSfidaTile()
        + clearClassifica()
        + clearFriend()
        + clearPending()
        + clearRichiesteSfida()
        + close()
        + endSfida()
        + initSfida()
        + preparaSfida()
        + updateClassifica()
        + updateUI()
        - logout()
    }
  }
  

  namespace client {
    class client.ClientLoginGUI {
        - LoginPanel : JPanel
        - loginBtn : JButton
        - nickTB : JTextField
        - pwTB : JPasswordField
        - registerBtn : JButton
        - window : JFrame
        + ClientLoginGUI()
        + close()
        + loginUtente()
        + registraUtente()
    }
  }
  

  namespace client {
    class client.ClientRMI {
        ~ port : int
        ~ remoteObject : Remote
        + ClientRMI()
        + registraUtente()
    }
  }
  

  namespace client {
    class client.ClientTCP {
        - address : SocketAddress
        - byteBuffer : ByteBuffer
        - classificaList : List<String>
        - friendsList : List<String>
        - lastResponse : StringBuilder
        - loggedNick : String
        - pendingFriendsList : List<String>
        - richiesteSfida : ConcurrentHashMap<String, String>
        - scanner : Scanner
        - sfida : List<String>
        - socketChannel : SocketChannel
        - token : String
        + ClientTCP()
        + accettaAmico()
        + accettaSfida()
        + aggiungiAmico()
        + getLoggedNick()
        + getRequest()
        + getResponse()
        + inviaSfida()
        + inviaTraduzione()
        + isLogged()
        + login()
        + logout()
        + manageAmicizia()
        + manageCommand()
        + read()
        + rifiutaAmico()
        + rifiutaSfida()
        + run()
        + send()
        + setLoggedNick()
        + setToken()
        - manageAmici()
        - manageClassifica()
        - managePendingFriends()
        - manageSfida()
    }
  }
  

  namespace client {
    class client.ClientUDP {
        - IPAddress : InetAddress
        - loggedNick : String
        - richiesteSfida : ConcurrentHashMap<String, String>
        - socket : DatagramSocket
        - token : String
        + ClientUDP()
        + getUdpPort()
        + read()
        + run()
        + setLoggedInfo()
    }
  }
  

  client.Client o-- client.ClientLoggedGUI : cloggedGUI
  client.Client o-- client.ClientLoginGUI : cloginGUI
  client.Client o-- client.ClientRMI : rmi
  client.Client o-- client.ClientTCP : tcp
  client.Client o-- client.ClientUDP : udp
  client.ClientLoggedGUI o-- client.ClientTCP : tcp
  client.ClientLoginGUI o-- client.ClientRMI : rmi
  client.ClientLoginGUI o-- client.ClientTCP : tcp
  client.ClientLoginGUI o-- client.ClientUDP : udp
  client.ClientRMI o-- server.IServerRMI : serverObject
  client.ClientTCP .up.|> java.lang.Runnable
  client.ClientUDP .up.|> java.lang.Runnable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
